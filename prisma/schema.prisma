generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  firstname     String
  lastname      String
  password      String
  imageUrl      String?
  auctions      Auction[]
  bids          Bid[]
  notifications Notification[]
  createdAt     DateTime       @default(now())

  @@map("users")
}

model Auction {
  id            String        @id @default(uuid())
  imageUrl      String
  title         String
  description   String
  startingPrice Int
  closedPrice   Int?
  status        AuctionStatus
  endsAt        DateTime
  bids          Bid[]
  ownerId       String
  owner         User          @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  createdAt     DateTime      @default(now())

  @@map("auctions")
}

enum AuctionStatus {
  ACTIVE
  CLOSED

  @@map("auction_status")
}

model Bid {
  id        String    @id @default(uuid())
  amount    Int
  status    BidStatus
  auctionId String
  bidderId  String
  auction   Auction   @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  bidder    User      @relation(fields: [bidderId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())

  @@map("bids")
}

enum BidStatus {
  OUTBID
  WINNING
  WON

  @@map("bid_status")
}

model Notification {
  id        String   @id @default(uuid())
  data      Json
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@map("notifications")
}
